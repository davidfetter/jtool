#!/bin/bash

# Usage: jtool-ps [OPTIONS]

########################################################################
# Bash environment
########################################################################

# Safety
set -o errexit  \
    -o pipefail \
    -o nounset  \
    -o noclobber

# Extensions
set +o posix
shopt -s lastpipe
shopt -s expand_aliases
shopt -s extglob
shopt -s globstar
shopt -s nullglob

########################################################################
# Handle private protocol
########################################################################

if (( $# > 0 )); then
    case $1 in
        -\?)
            ps --help all | less
            exit
            ;;
        -\:)
            cat <<SYNOPSYS
jtool CMD
   CMD sinopsys...
SYNOPSYS
            exit 0
            ;;
    esac
fi

########################################################################
# Command
########################################################################

# `jq` options
declare -a JQ_OPT=(
    --slurp
    --raw-input
    --indent 4 
)

# `ps` with JSON output!
ps "$@"                     \
| sed   -e 's/^[ \t]\+//'   \
        -e 's/[ \t]\+$//'   \
        -e '/^$/d'          \
        -e 's/[ \t]\+/ /g'  \
| jq ${JQ_OPT[@]}           \
'   (./"\n") as $lines
    | ($lines[0]/" ") as $names
    | ($names|length) as $nfields
    | $lines[1:-1][]
    | (./" ") as $values
    | reduce range($nfields) as $i
        ({};if $i+1 == $nfields
            then .[$names[$i]] = ($values[$i:] | join(" "))
            else .[$names[$i]] = $values[$i] end)
'

########################################################################
# Bugs:
#   Do not manage spaces inside column values except in the last column.
########################################################################

exit

# vim:syntax=sh:et:sw=4:ts=4:ai
